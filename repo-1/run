#!/bin/bash

SCRIPT_PATH="$(
  cd "$(dirname "$0")" >/dev/null 2>&1
  pwd -P
)"
command=$1
shift

case ${command} in
"tests")
  echo "running tests..."
  sleep 2
  echo "all tests passed!"
  ;;

"schema")
  echo "generating schema..."
  ./repo-1/scripts/generate-schema.sh
  ;;

"clone")
  echo "cloning repo-2..."
  export GIT_BRANCH_REPO_1=$(git rev-parse --abbrev-ref HEAD)
  cd /home/runner/work/_temp
  git clone git@github.com:margostino/multiplex-request.git
  cd multiplex-request

  export GIT_BRANCH_REPO_2=${GIT_BRANCH_REPO_1/r1/r2}

  BRANCH_EXIST_IN_REPO_2=$(git checkout ${GIT_BRANCH_REPO_2} 2>&1)
  echo "exist? ${BRANCH_EXIST_IN_REPO_2}"
  if [[ ${BRANCH_EXIST_IN_REPO_2} == "error"* ]]; then
    echo "branch ${GIT_BRANCH_REPO_2} does not exist in repo-2"
#    git checkout -b ${GIT_BRANCH_REPO_2}
    echo "trigger_pull_request=${GIT_BRANCH_REPO_2}" >> "$GITHUB_OUTPUT"
    echo "branch created"
  else
    echo "branch ${GIT_BRANCH_REPO_2} already exists in repo-2"
#    git checkout ${GIT_BRANCH_REPO_2}
    echo "trigger_pull_request=''" >> "$GITHUB_OUTPUT"
  fi

  echo "repo-2 cloned!"
  ;;

"update-schema")
  echo "updating schema..."
  git config --global user.email "multiplex-worker@margostino.com"
  git config --global user.name "multiplex-worker"
  mv repo-1/schema.json /home/runner/work/_temp/multiplex-request/repo-2/schema.json
  cd /home/runner/work/_temp/multiplex-request
  git add repo-2/schema.json
  git commit -m "update schema"
  export GIT_BRANCH_REPO_2=$(git rev-parse --abbrev-ref HEAD)
  git push --set-upstream origin $GIT_BRANCH_REPO_2
  echo "schema updated!"
  ;;

"build")
  echo "building app..."
  sleep 2
  echo "build done!"
  ;;

*)
  echo 'Invalid command'
  exit 1
  ;;
esac
